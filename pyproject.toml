[project]
name = "claude-code-trees"
version = "0.1.0"
description = "Production-ready Python library for managing Claude Code instances on git worktrees"
authors = [
    {name = "samjtro", email = "hi@samjtro.com"},
]
dependencies = [
    "claude-code-sdk>=0.0.20",  # Official Claude Code Python SDK - pinned to working version
    "anyio>=4.0.0,<5.0.0",
    "gitpython>=3.1.40,<4.0.0",
    "sqlalchemy>=2.0.0,<3.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "click>=8.0.0,<9.0.0",
    "rich>=13.0.0,<14.0.0",
]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = {text = "MIT"}
keywords = ["claude", "code", "git", "worktree", "ai", "orchestration", "development"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/rizome-dev/claude-code-trees"
Repository = "https://github.com/rizome-dev/claude-code-trees"
Documentation = "https://github.com/rizome-dev/claude-code-trees#readme"
"Issue Tracker" = "https://github.com/rizome-dev/claude-code-trees/issues"
Changelog = "https://github.com/rizome-dev/claude-code-trees/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
clct = "claude_code_trees.cli:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true
installer = "uv"

[tool.pdm.scripts]
test = "pytest tests/ -v"
lint = "ruff check src/ tests/"
format = "black src/ tests/"
typecheck = "mypy src/"
test-cov = "pytest tests/ --cov=claude_code_trees --cov-report=html"
dev-install = "pdm install -d"
clean = "rm -rf .pytest_cache/ htmlcov/ .coverage"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E203", "E266", "E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
